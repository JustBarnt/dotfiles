" register leader
let mapleader = " "
let maplocalleader = "\\"

let g:WhichKey_FontSize = 14
let g:WhichKey_PrefixStyle = "bold"
let g:WhichKey_KeyStyle = "italic"
let g:WhichKey_SortOrder = "by_key_prefix_first"
let g:WhichKey_ShowTypedSequence = "true"

let g:argtextobj_pairs="(:),[:],{:},<:>"
let g:highlightedyank_highlight_duration = "200"
let g:highlightedyank_highlight_color = "rgba(202, 158, 230, 155)"

sethandler <C-j> a:vim
sethandler <C-k> a:vim
sethandler <C-n> a:vim
sethandler <C-p> a:vim
sethandler <C-y> a:vim
sethandler <C-r> a:vim

" basic stuff
set ideamarks
set clipboard+=unnamedplus
set history=1000
set nohlsearch
set ignorecase
set incsearch
set smartcase
set showcmd
set showmode
set scrolloff=5
set showmode
set notimeout
set timeoutlen=2500
set virtualedit=block
set colorcolumn=120
set relativenumber
set ReplaceWithRegister
set ideajoin
set idearefactormode=visual

"Plugins
Plug 'machakann/vim-highlightedyank'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'michaeljsmith/vim-indent-object'
set surround
set argtextobj
set textobj-entire
set functiontextobj
set which-key

map Q gq
unmap grr

nnoremap <leader>uL :call NumberToggle()<CR>

nnoremap <leader>vt <Action>(VimFindActionIdAction)<CR>
nnoremap <leader>va <Action>(VimActions)<CR>

"marks
nmap <leader>ms <Action>(ShowBookmarks)

"move lines
nnoremap <silent> <A-k> :m .-2<CR>==
nnoremap <silent> <A-j> :m .+1<CR>==
xnoremap <silent> <A-k> :m '<-2<CR>gv=gv
xnoremap <silent> <A-j> :m '>+1<CR>gv=gv

" find
nmap <leader>fa <action>(GotoAction)
nmap <leader>fb <action>(Switcher)
nmap <leader>ff <action>(GotoFile)
nmap <leader>fp <action>(FindInPath)
nmap <leader>fc <action>(GotoClass)
nmap <leader>fs <Action>(FileStructurePopup)
nmap <leader>fS <Action>(ActivateStructureToolWindow)
nmap <leader>fe <action>(SearchEverywhere)
nmap <leader>fnp <action>(RiderNuGetToggleToolWindowAction)

" Code jumps
nmap gd <Action>(GotoDeclaration)
nmap gD <Action>(GotoSuperMethod)
nmap gT <Action>(GotoTypeDeclaration)
nmap gI <Action>(ReSharperGotoImplementation)
nmap gri <Action>(GotoImplementation)
nmap grr <Action>(FindUsages)
nmap [[  <Action>(MethodUp)
nmap ]] <Action>(MethodDown)

" Editing
nmap <leader>ca <Action>(ShowIntentionActions)
nmap <leader>cf <Action>(ReformatCode)
vmap <leader>cf <Action>(ReformatCode)
nmap <leader>cr <Action>(RenameElement)
nmap <leader>sh <Action>(LocalHistory.ShowHistory)
nmap <leader>nf <Action>(NewElement)
nmap K <action>(ShowHoverInfo)

" Git
nmap <leader>gt <Action>(ActivateCommitToolWindow)
nmap <leader>gr <Action>(Vcs.RollbackChangedLines)
nmap <leader>gR <Action>(ChangesView.Revert)
nmap <leader>gc <Action>(CheckinProject)
nmap <leader>gp <Action>(Vcs.Push)
nmap <leader>gs <Action>(Git.Fetch)<action>(Git.Pull)

" Window splits
map <C-w>v <Action>(SplitVertically)
map <C-w>s <Action>(SplitHorizontally)
map <C-w>u <Action>(Unsplit)
map <C-w>m <Action>(MoveEditorToOppositeTabGroup)

" Pane navigation
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-k> <C-w>k
nnoremap <C-j> <C-w>j
"<Bar> is |
nmap <leader><Bar> <action>(SplitVertically)
nmap <leader>- <action>(SplitHorizontally)

" Terminal
nmap <leader>/ <action>(ActivateTerminalToolWindow)

" Switching tabs
nmap L <action>(NextTab)
nmap H <action>(PreviousTab)
nmap <leader>bd <action>(CloseContent)
nmap <leader>bD <Action>(CloseAllEditorsButActive)

" Clean/Build/Rebuild
nmap <leader>pb <action>(BuildWholeSolutionAction)
nmap <leader>pr <action>(RebuildSolutionAction)
nmap <leader>pc <action>(CleanSolutionAction)
nmap <leader>pB <action>(BuildCurrentProject)
nmap <leader>pR <action>(RebuildCurrentProject)
nmap <leader>pC <action>(CleanCurrentProject)

" Filter Todo
nmap <leader>gt <action>(ActivateTODOToolWindow)

" Diagnostics
nmap ]d <action>(GotoNextError)
nmap [d <action>(GotoPreviousError)

" AutoCompletion
imap <C-y> <action>(EditorChooseLookupItemReplace)
imap <A-y> <action>(InsertInlineCompletionAction)

" Debugger
nmap <leader>dc <Action>(Debug)
nmap <leader>dq <Action>(Stop)
nmap <leader>db <Action>(ToggleLineBreakpoint)
nmap <leader>do <Action>(StepOver)
nmap <leader>di <Action>(StepInto)
nmap <leader>dO <Action>(StepOut)
nmap <leader>dE <Action>(EvaluateExpression)
nmap <leader>dB <Action>(Debugger.RemoveAllBreakpoints)

" source
map <leader>9 <Action>(IdeaVim.ReloadVimRc.reload)

map s <Action>(flash.search)